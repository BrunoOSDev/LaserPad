unit LPUtil;

interface

uses
  Windows, Messages, DB, Math, Controls, Forms, Graphics, Menus, Types, Classes, RegularExpressions, Vcl.StdCtrls,
  VCl.Buttons, Clipbrd, Vcl.ExtCtrls, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error,
  FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async,
  FireDAC.DApt, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client;

procedure ShowPopupMenu(oControle: TControl; ppm: TPopupMenu; lBaixo: Boolean = False; iEspacamentoItem: Integer= 20);
function GetMemoLine(Memo: TMemo);
function GetMemoCol(Memo: TMemo);

implementation

procedure ShowPopupMenu(oControle: TControl; ppm: TPopupMenu; lBaixo: Boolean= False; iEspacamentoItem: Integer= 20);
var
  oPoint: TPoint;
  i, iQtdItens: Integer;
begin
  oPoint    := oControle.ClientToScreen(Point(0, oControle.ClientHeight));
  iQtdItens := 0;

  for i := 0 to ppm.Items.Count -1 do
  begin
    if(ppm.Items.Items[i].Visible)then
      iQtdItens := iQtdItens + 1;
  end;

  if(lBaixo)then
    ppm.Popup(oPoint.X, oPoint.Y)
  else
    ppm.Popup(oPoint.X, (oPoint.Y - oControle.Height - 3 - (iQtdItens * iEspacamentoItem)));
end;

function GetMemoLine(Memo: TMemo);
var
  iLn: Integer;
begin
  iLn  := Memo.CaretPos.y;
end;

function GetMemoCol(Memo: TMemo);
var
  iLn: Integer;
begin
  iLn  := Memo.CaretPos.x;
end;

end.
